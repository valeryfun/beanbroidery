{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userDetailsReducers, userLoginReducers, userRegisterReducers, userUpdateProfileReducers, userListReducers } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderListMyOrdersReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers,\n  userList: userListReducers,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyOrdersReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/valeryfun/Library/Mobile Documents/com~apple~CloudDocs/eComm udemy/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","cartReducer","userDetailsReducers","userLoginReducers","userRegisterReducers","userUpdateProfileReducers","userListReducers","orderCreateReducer","orderDetailsReducer","orderListMyOrdersReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACCC,mBADD,EAECC,sBAFD,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACCC,mBADD,EAECC,iBAFD,EAGCC,oBAHD,EAICC,yBAJD,EAKCC,gBALD,QAMO,yBANP;AAOA,SACCC,kBADD,EAECC,mBAFD,EAGCC,wBAHD,EAICC,eAJD,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC/BiB,EAAAA,WAAW,EAAEb,mBADkB;AAE/Bc,EAAAA,cAAc,EAAEb,sBAFe;AAG/Bc,EAAAA,IAAI,EAAEb,WAHyB;AAI/Bc,EAAAA,SAAS,EAAEZ,iBAJoB;AAK/Ba,EAAAA,YAAY,EAAEZ,oBALiB;AAM/Ba,EAAAA,WAAW,EAAEf,mBANkB;AAO/BgB,EAAAA,iBAAiB,EAAEb,yBAPY;AAQ/Bc,EAAAA,QAAQ,EAAEb,gBARqB;AAS/Bc,EAAAA,WAAW,EAAEb,kBATkB;AAU/Bc,EAAAA,YAAY,EAAEb,mBAViB;AAW/Bc,EAAAA,QAAQ,EAAEZ,eAXqB;AAY/Ba,EAAAA,WAAW,EAAEd;AAZkB,CAAD,CAA/B;AAeA,MAAMe,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD0B,GAE1B,EAFH;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GAEzB,IAFH;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADgC,GAEhC,EAFH;AAIA,MAAMK,YAAY,GAAG;AACpBjB,EAAAA,IAAI,EAAE;AACLkB,IAAAA,SAAS,EAAER,oBADN;AAELS,IAAAA,eAAe,EAAEH;AAFZ,GADc;AAKpBf,EAAAA,SAAS,EAAE;AAAEmB,IAAAA,QAAQ,EAAEL;AAAZ;AALS,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACtC,KAAD,CAAnB;AAEA,MAAMuC,KAAK,GAAG1C,WAAW,CACxBiB,OADwB,EAExBoB,YAFwB,EAGxBjC,mBAAmB,CAACF,eAAe,CAAC,GAAGuC,UAAJ,CAAhB,CAHK,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n\tproductListReducers,\n\tproductDetailsReducers\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n\tuserDetailsReducers,\n\tuserLoginReducers,\n\tuserRegisterReducers,\n\tuserUpdateProfileReducers,\n\tuserListReducers\n} from './reducers/userReducers'\nimport {\n\torderCreateReducer,\n\torderDetailsReducer,\n\torderListMyOrdersReducer,\n\torderPayReducer\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n\tproductList: productListReducers,\n\tproductDetails: productDetailsReducers,\n\tcart: cartReducer,\n\tuserLogin: userLoginReducers,\n\tuserRegister: userRegisterReducers,\n\tuserDetails: userDetailsReducers,\n\tuserUpdateProfile: userUpdateProfileReducers,\n\tuserList: userListReducers,\n\torderCreate: orderCreateReducer,\n\torderDetails: orderDetailsReducer,\n\torderPay: orderPayReducer,\n\torderListMy: orderListMyOrdersReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n\t? JSON.parse(localStorage.getItem('cartItems'))\n\t: []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n\t? JSON.parse(localStorage.getItem('shippingAddress'))\n\t: {}\n\nconst initialState = {\n\tcart: {\n\t\tcartItems: cartItemsFromStorage,\n\t\tshippingAddress: shippingAddressFromStorage\n\t},\n\tuserLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n\treducer,\n\tinitialState,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}