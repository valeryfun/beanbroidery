{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_ORDERS_REQUEST, ORDER_LIST_MY_ORDERS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/valery.fun/Documents/Personal/beanbroidery/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_MY_ORDERS_REQUEST","ORDER_LIST_MY_ORDERS_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","ORDER_LIST_MY_ORDERS_FAIL"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,oBAA3B,EAAiDC,oBAAjD,EAAuEC,kBAAvE,EAA2FC,qBAA3F,EAAkHC,qBAAlH,EAAyIC,4BAAzI,EAAuKC,4BAAvK,EAAqMC,cAArM,EAAqNC,iBAArN,EAAwOC,iBAAxO,QAAgQ,6BAAhQ;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAI;AACHD,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEf;AADE,KAAD,CAAR;AAIA,UAAM;AACLgB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFH,QAAQ,EAFZ;AAGA,UAAMI,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFhC;AADK,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAY,aAAZ,EAA0BX,KAA1B,EAAiCM,MAAjC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAACd,oBAAP;AAA6BuB,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACA,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACfZ,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEhB,iBADE;AAERyB,MAAAA,OAAO,EACNC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACGF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADvB,GAEGF,KAAK,CAACE;AALF,KAAD,CAAR;AAOA;AACD,CA3BM;AA6BP,OAAO,MAAMC,eAAe,GAAGC,EAAE,IAAI,OAAOhB,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,MAAI;AACHD,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEZ;AADE,KAAD,CAAR;AAIA,UAAM;AACLa,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFH,QAAQ,EAFZ;AAGA,UAAMI,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADhC;AADK,KAAf;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACoB,GAAN,CAAW,eAAcD,EAAG,EAA5B,EAA+BX,MAA/B,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAACX,qBAAP;AAA8BoB,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACA,GAhBD,CAgBE,OAAOG,KAAP,EAAc;AACfZ,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEb,kBADE;AAERsB,MAAAA,OAAO,EACNC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACGF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADvB,GAEGF,KAAK,CAACE;AALF,KAAD,CAAR;AAOA;AACD,CA1BM;AA4BP,OAAO,MAAMI,QAAQ,GAAG,CAACC,OAAD,EAAUC,aAAV,KAA4B,OAAOpB,QAAP,EAAiBC,QAAjB,KAA8B;AACjF,MAAI;AACHD,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEP;AADE,KAAD,CAAR;AAIA,UAAM;AACLQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFH,QAAQ,EAFZ;AAGA,UAAMI,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACI,wBAAe,kBADnB;AAERC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFhC;AADK,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACwB,GAAN,CAAW,eAAcF,OAAQ,MAAjC,EAAwCC,aAAxC,EAAuDf,MAAvD,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAACN,iBAAP;AAA0Be,MAAAA,OAAO,EAAEF;AAAnC,KAAD,CAAR;AACA,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACfZ,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,cADE;AAERiB,MAAAA,OAAO,EACNC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACGF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADvB,GAEGF,KAAK,CAACE;AALF,KAAD,CAAR;AAOA;AACD,CA3BM;AA6BP,OAAO,MAAMQ,YAAY,GAAG,MAAM,OAAOtB,QAAP,EAAiBC,QAAjB,KAA8B;AAC/D,MAAI;AACHD,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAR;AAIA,UAAM;AACLW,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFH,QAAQ,EAFZ;AAGA,UAAMI,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADhC;AADK,KAAf;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACoB,GAAN,CAAW,sBAAX,EAAkCZ,MAAlC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAACT,4BAAP;AAAqCkB,MAAAA,OAAO,EAAEF;AAA9C,KAAD,CAAR;AACA,GAhBD,CAgBE,OAAOG,KAAP,EAAc;AACfZ,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEqB,yBADE;AAERZ,MAAAA,OAAO,EACNC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACGF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADvB,GAEGF,KAAK,CAACE;AALF,KAAD,CAAR;AAOA;AACD,CA1BM","sourcesContent":["import {ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_ORDERS_REQUEST, ORDER_LIST_MY_ORDERS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_REQUEST\r\n\t\t})\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo }\r\n\t\t} = getState()\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n\t\tdispatch({ type:ORDER_CREATE_SUCCESS, payload: data })\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const getOrderDetails = id => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_REQUEST\r\n\t\t})\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo }\r\n\t\t} = getState()\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n\t\tdispatch({ type:ORDER_DETAILS_SUCCESS, payload: data })\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_REQUEST\r\n\t\t})\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo }\r\n\t\t} = getState()\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n                'Content-Type':'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n\t\tdispatch({ type:ORDER_PAY_SUCCESS, payload: data })\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_ORDERS_REQUEST\r\n\t\t})\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo }\r\n\t\t} = getState()\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n\t\tdispatch({ type:ORDER_LIST_MY_ORDERS_SUCCESS, payload: data })\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_ORDERS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}