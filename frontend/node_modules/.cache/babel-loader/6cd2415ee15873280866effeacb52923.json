{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/valeryfun/Library/Mobile Documents/com~apple~CloudDocs/eComm udemy/frontend/src/screens/EditProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport FormContainer from '../components/FormContainer';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst EditProductScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [price, setPrice] = useState(0);\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [productId, dispatch, history, product, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); //update product\n\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      description,\n      brand,\n      category,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Image URL\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler,\n            children: uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Quantity\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Category\",\n              value: category,\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"description\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditProductScreen, \"tCntLS8ZXyxr7UED8bX9SzrJXcw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProductScreen;\nexport default EditProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductScreen\");","map":{"version":3,"sources":["/Users/valeryfun/Library/Mobile Documents/com~apple~CloudDocs/eComm udemy/frontend/src/screens/EditProductScreen.js"],"names":["axios","React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Loader","Message","listProductDetails","updateProduct","FormContainer","PRODUCT_UPDATE_RESET","EditProductScreen","match","history","productId","params","id","price","setPrice","name","setName","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport FormContainer from '../components/FormContainer'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst EditProductScreen = ({ match, history }) => {\n\tconst productId = match.params.id\n\tconst [price, setPrice] = useState(0)\n\tconst [name, setName] = useState('')\n\tconst [image, setImage] = useState('')\n\tconst [brand, setBrand] = useState('')\n\tconst [category, setCategory] = useState('')\n\tconst [countInStock, setCountInStock] = useState(0)\n\tconst [description, setDescription] = useState('')\n\tconst [uploading, setUploading] = useState(false)\n\n\tconst dispatch = useDispatch()\n\tconst productDetails = useSelector(state => state.productDetails)\n\tconst { loading, error, product } = productDetails\n\n\tconst productUpdate = useSelector(state => state.productUpdate)\n\tconst {\n\t\tloading: loadingUpdate,\n\t\terror: errorUpdate,\n\t\tsuccess: successUpdate\n\t} = productUpdate\n\n\tuseEffect(() => {\n\t\tif (successUpdate) {\n\t\t\tdispatch({ type: PRODUCT_UPDATE_RESET })\n\t\t\thistory.push('/admin/productlist')\n\t\t} else {\n\t\t\tif (!product.name || product._id !== productId) {\n\t\t\t\tdispatch(listProductDetails(productId))\n\t\t\t} else {\n\t\t\t\tsetName(product.name)\n\t\t\t\tsetPrice(product.price)\n\t\t\t\tsetImage(product.image)\n\t\t\t\tsetBrand(product.brand)\n\t\t\t\tsetCategory(product.category)\n\t\t\t\tsetCountInStock(product.countInStock)\n\t\t\t\tsetDescription(product.description)\n\t\t\t}\n\t\t}\n\t}, [productId, dispatch, history, product, successUpdate])\n\n\tconst uploadFileHandler = async e => {\n\t\tconst file = e.target.files[0]\n\t\tconst formData = new FormData()\n\t\tformData.append('image', file)\n\t\tsetUploading(true)\n\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst { data } = await axios.post('/api/upload', formData, config)\n\t\t\tsetImage(data)\n\t\t\tsetUploading(false)\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetUploading(false)\n\t\t}\n\t}\n\n\tconst submitHandler = e => {\n\t\te.preventDefault()\n\t\t//update product\n\t\tdispatch(\n\t\t\tupdateProduct({\n\t\t\t\t_id: productId,\n\t\t\t\tname,\n\t\t\t\tprice,\n\t\t\t\timage,\n\t\t\t\tdescription,\n\t\t\t\tbrand,\n\t\t\t\tcategory,\n\t\t\t\tcountInStock\n\t\t\t})\n\t\t)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Link to='/admin/productlist' className='btn btn-light my-3'>\n\t\t\t\tGo Back\n\t\t\t</Link>\n\t\t\t<FormContainer>\n\t\t\t\t<h1>Edit Product</h1>\n\t\t\t\t{loadingUpdate && <Loader />}\n\t\t\t\t{errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : error ? (\n\t\t\t\t\t<Message variant='danger'>{error}</Message>\n\t\t\t\t) : (\n\t\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\t\t\tplaceholder='Enter Name'\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='price'>\n\t\t\t\t\t\t\t<Form.Label>Price</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tplaceholder='Enter Price'\n\t\t\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\t\t\tonChange={e => setPrice(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='image'>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter Image URL'\n\t\t\t\t\t\t\t\tvalue={image}\n\t\t\t\t\t\t\t\tonChange={e => setImage(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t<Form.File\n\t\t\t\t\t\t\t\tid='image-file'\n\t\t\t\t\t\t\t\tlabel='Choose File'\n\t\t\t\t\t\t\t\tcustom\n\t\t\t\t\t\t\t\tonChange={uploadFileHandler}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{uploading && <Loader />}\n\t\t\t\t\t\t\t</Form.File>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='brand'>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter Brand'\n\t\t\t\t\t\t\t\tvalue={brand}\n\t\t\t\t\t\t\t\tonChange={e => setBrand(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='countInStock'>\n\t\t\t\t\t\t\t<Form.Label>Count In Stock</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tplaceholder='Enter Quantity'\n\t\t\t\t\t\t\t\tvalue={countInStock}\n\t\t\t\t\t\t\t\tonChange={e => setCountInStock(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t<Form.Group controlId='category'>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter Category'\n\t\t\t\t\t\t\t\t\tvalue={category}\n\t\t\t\t\t\t\t\t\tonChange={e => setCategory(e.target.value)}\n\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t<Form.Group controlId='description'>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Description'\n\t\t\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\t\t\tonChange={e => setDescription(e.target.value)}\n\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</FormContainer>\n\t\t</>\n\t)\n}\n\nexport default EditProductScreen\n"]},"metadata":{},"sourceType":"module"}