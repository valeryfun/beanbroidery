{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/valery.fun/Documents/Personal/beanbroidery/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,oBAA3B,EAAiDC,oBAAjD,QAA4E,6BAA5E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAI;AACHD,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEP;AADE,KAAD,CAAR;AAIA,UAAM;AACLQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFH,QAAQ,EAFZ;AAGA,UAAMI,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFhC;AADK,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAY,aAAZ,EAA0BX,KAA1B,EAAiCM,MAAjC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAACN,oBAAP;AAA6Be,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACA,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACfZ,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,iBADE;AAERiB,MAAAA,OAAO,EACNC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACGF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADvB,GAEGF,KAAK,CAACE;AALF,KAAD,CAAR;AAOA;AACD,CA3BM","sourcesContent":["import {ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_REQUEST\r\n\t\t})\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo }\r\n\t\t} = getState()\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n\t\tdispatch({ type:ORDER_CREATE_SUCCESS, payload: data })\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message\r\n\t\t})\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}