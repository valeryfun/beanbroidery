{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET } from '../constants/userConstants';\nimport axios from 'axios';\nimport { ORDER_LIST_MY_ORDERS_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_ORDERS_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/valeryfun/Library/Mobile Documents/com~apple~CloudDocs/eComm udemy/frontend/src/actions/userActions.js"],"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","axios","ORDER_LIST_MY_ORDERS_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers"],"mappings":"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","sourcesContent":["import {\n\tUSER_DETAILS_FAIL,\n\tUSER_DETAILS_REQUEST,\n\tUSER_DETAILS_SUCCESS,\n\tUSER_LOGIN_FAIL,\n\tUSER_LOGIN_REQUEST,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGOUT,\n\tUSER_REGISTER_FAIL,\n\tUSER_REGISTER_REQUEST,\n\tUSER_REGISTER_SUCCESS,\n\tUSER_UPDATE_FAIL,\n\tUSER_UPDATE_REQUEST,\n\tUSER_UPDATE_SUCCESS,\n\tUSER_DETAILS_RESET,\n\tUSER_LIST_REQUEST,\n\tUSER_LIST_SUCCESS,\n\tUSER_LIST_FAIL,\n\tUSER_LIST_RESET\n} from '../constants/userConstants'\nimport axios from 'axios'\nimport { ORDER_LIST_MY_ORDERS_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async dispatch => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_REQUEST\n\t\t})\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.post(\n\t\t\t'/api/users/login',\n\t\t\t{\n\t\t\t\temail,\n\t\t\t\tpassword\n\t\t\t},\n\t\t\tconfig\n\t\t)\n\n\t\tdispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const logout = () => dispatch => {\n\tlocalStorage.removeItem('userInfo')\n\tdispatch({ type: USER_LOGOUT })\n\tdispatch({ type: USER_DETAILS_RESET })\n\tdispatch({ type: ORDER_LIST_MY_ORDERS_RESET })\n\tdispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async dispatch => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_REQUEST\n\t\t})\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.post(\n\t\t\t'/api/users',\n\t\t\t{\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tpassword\n\t\t\t},\n\t\t\tconfig\n\t\t)\n\n\t\tdispatch({ type: USER_REGISTER_SUCCESS, payload: data })\n\t\tdispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.get(`/api/users/${id}`, config)\n\n\t\tdispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_UPDATE_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.put(`/api/users/profile`, user, config)\n\n\t\tdispatch({ type: USER_UPDATE_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_UPDATE_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_LIST_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.get(`/api/users`, config)\n\n\t\tdispatch({ type: USER_LIST_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_LIST_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}