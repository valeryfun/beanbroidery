{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_ORDERS_FAIL, ORDER_LIST_MY_ORDERS_REQUEST, ORDER_LIST_MY_ORDERS_SUCCESS, ORDER_LIST_ORDERS_FAIL, ORDER_LIST_ORDERS_REQUEST, ORDER_LIST_ORDERS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_ORDERS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_ORDERS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/valeryfun/Library/Mobile Documents/com~apple~CloudDocs/eComm udemy/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_MY_ORDERS_FAIL","ORDER_LIST_MY_ORDERS_REQUEST","ORDER_LIST_MY_ORDERS_SUCCESS","ORDER_LIST_ORDERS_FAIL","ORDER_LIST_ORDERS_REQUEST","ORDER_LIST_ORDERS_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import {\n\tORDER_CREATE_FAIL,\n\tORDER_CREATE_REQUEST,\n\tORDER_CREATE_SUCCESS,\n\tORDER_DETAILS_FAIL,\n\tORDER_DETAILS_REQUEST,\n\tORDER_DETAILS_SUCCESS,\n\tORDER_LIST_MY_ORDERS_FAIL,\n\tORDER_LIST_MY_ORDERS_REQUEST,\n\tORDER_LIST_MY_ORDERS_SUCCESS,\n\tORDER_LIST_ORDERS_FAIL,\n\tORDER_LIST_ORDERS_REQUEST,\n\tORDER_LIST_ORDERS_SUCCESS,\n\tORDER_PAY_FAIL,\n\tORDER_PAY_REQUEST,\n\tORDER_PAY_SUCCESS\n} from '../constants/orderConstants'\nimport axios from 'axios'\n\nexport const createOrder = order => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ORDER_CREATE_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.post(`/api/orders`, order, config)\n\n\t\tdispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: ORDER_CREATE_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ORDER_DETAILS_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.get(`/api/orders/${id}`, config)\n\n\t\tdispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: ORDER_DETAILS_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n\tdispatch,\n\tgetState\n) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ORDER_PAY_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.put(\n\t\t\t`/api/orders/${orderId}/pay`,\n\t\t\tpaymentResult,\n\t\t\tconfig\n\t\t)\n\n\t\tdispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: ORDER_PAY_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ORDER_LIST_MY_ORDERS_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.get(`/api/orders/myorders`, config)\n\n\t\tdispatch({\n\t\t\ttype: ORDER_LIST_MY_ORDERS_SUCCESS,\n\t\t\tpayload: data\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: ORDER_LIST_MY_ORDERS_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ORDER_LIST_ORDERS_REQUEST\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo }\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\n\t\t\t}\n\t\t}\n\t\tconst { data } = await axios.get(`/api/orders`, config)\n\n\t\tdispatch({\n\t\t\ttype: ORDER_LIST_ORDERS_SUCCESS,\n\t\t\tpayload: data\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: ORDER_LIST_ORDERS_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message\n\t\t})\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}