{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/valeryfun/Library/Mobile Documents/com~apple~CloudDocs/eComm udemy/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, user, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match!');\n    } else {\n      //DISPATCH UPDATE PROFILE\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile updated!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProfileScreen, \"HsUMRe7Rr9rGnfD3lDufeWuWiJc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/valeryfun/Library/Mobile Documents/com~apple~CloudDocs/eComm udemy/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","ProfileScreen","location","history","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","push","submitHandler","e","preventDefault","id","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\n\nconst ProfileScreen = ({ location, history }) => {\n\tconst [email, setEmail] = useState('')\n\tconst [name, setName] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [message, setMessage] = useState(null)\n\n\tconst dispatch = useDispatch()\n\tconst userDetails = useSelector(state => state.userDetails)\n\tconst { loading, error, user } = userDetails\n\n\tconst userLogin = useSelector(state => state.userLogin)\n\tconst { userInfo } = userLogin\n\n\tconst userUpdateProfile = useSelector(state => state.userUpdateProfile)\n\tconst { success } = userUpdateProfile\n\n\tuseEffect(() => {\n\t\tif (!userInfo) {\n\t\t\thistory.push('/login')\n\t\t} else {\n\t\t\tif (!user.name) {\n\t\t\t\tdispatch(getUserDetails('profile'))\n\t\t\t} else {\n\t\t\t\tsetName(user.name)\n\t\t\t\tsetEmail(user.email)\n\t\t\t}\n\t\t}\n\t}, [dispatch, history, user, userInfo])\n\n\tconst submitHandler = e => {\n\t\te.preventDefault()\n\t\tif (password !== confirmPassword) {\n\t\t\tsetMessage('Passwords do not match!')\n\t\t} else {\n\t\t\t//DISPATCH UPDATE PROFILE\n\t\t\tdispatch(updateUserProfile({ id: user._id, name, email, password }))\n\t\t}\n\t}\n\treturn (\n\t\t<Row>\n\t\t\t<Col md={3}>\n\t\t\t\t<h2>User Profile</h2>\n\t\t\t\t{message && <Message variant='danger'>{message}</Message>}\n\t\t\t\t{success && <Message variant='success'>Profile updated!</Message>}\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t\t{loading && <Loader />}\n\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\t\tplaceholder='Enter Name'\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tplaceholder='Enter Email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Enter Password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\tonChange={e => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Col>\n\t\t\t<Col md={9}>\n\t\t\t\t<h2>My Orders</h2>\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}